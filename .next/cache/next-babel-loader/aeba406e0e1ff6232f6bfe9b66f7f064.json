{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../components/Layout';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, null, __jsx(\"h1\", null, \"Batman TV show\"), __jsx(\"ul\", null, props.shows.map(function (show) {\n    return __jsx(\"li\", {\n      key: show.id\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(show.id, \".\")\n    }, __jsx(\"a\", null, show.name)));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.tvmaze.com/search/shows?q=batman'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["D:/Desktop/next-express/pages/index.js"],"names":["Link","fetch","Layout","Index","props","shows","map","show","id","name","getInitialProps","res","json","data","console","log","length","entry"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SACZ,MAAC,MAAD,QACE,mCADF,EAEE,kBACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAACC,IAAD;AAAA,WACf;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAd,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb;AAAvB,OACE,iBAAID,IAAI,CAACE,IAAT,CADF,CADF,CADe;AAAA,GAAhB,CADH,CAFF,CADY;AAAA,CAAd;;AAcAN,KAAK,CAACO,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJT,KAAK,CAAC,8CAAD,CADD;;AAAA;AAChBU,UAAAA,GADgB;AAAA;AAAA,2CAEHA,GAAG,CAACC,IAAJ,EAFG;;AAAA;AAEhBC,UAAAA,IAFgB;AAItBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAJsB,2CAMf;AACLX,YAAAA,KAAK,EAAEQ,IAAI,CAACP,GAAL,CAAS,UAACW,KAAD;AAAA,qBAAWA,KAAK,CAACV,IAAjB;AAAA,aAAT;AADF,WANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAWA,eAAeJ,KAAf","sourcesContent":["import Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Layout from '../components/Layout';\r\n\r\nconst Index = (props) => (\r\n  <Layout>\r\n    <h1>Batman TV show</h1>\r\n    <ul>\r\n      {props.shows.map((show) => (\r\n        <li key={show.id}>\r\n          <Link href=\"/p/[id]\" as={`/p/${show.id}.`}>\r\n            <a>{show.name}</a>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </Layout>\r\n);\r\nIndex.getInitialProps = async () => {\r\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\r\n  const data = await res.json();\r\n\r\n  console.log(`show data fetched. Count: ${data.length}`);\r\n\r\n  return {\r\n    shows: data.map((entry) => entry.show),\r\n  };\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}