{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../components/Layout';\n\nvar Post = function Post(props) {\n  return __jsx(Layout, null, __jsx(\"h1\", null, props.show.name), __jsx(\"p\", null));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id, res, show;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/shows/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          show = _context.sent;\n          console.log(\"Fetched show: \".concat(show.name));\n          return _context.abrupt(\"return\", {\n            show: show\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Post; // const Content = ({ router }) => (\n//   <div>\n//     <h1>{router.query.id}</h1>\n//     <p>This is the blog post content</p>\n//   </div>\n// );\n// export default () => {\n//   const router = useRouter();\n//   return (\n//     <Layout>\n//       <Content router={router} />\n//     </Layout>\n//   );\n// };","map":{"version":3,"sources":["D:/Desktop/next-express/pages/p/[id].js"],"names":["fetch","Layout","Post","props","show","name","getInitialProps","context","id","query","res","json","console","log"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD;AAAA,SACX,MAAC,MAAD,QACE,kBAAKA,KAAK,CAACC,IAAN,CAAWC,IAAhB,CADF,EAEE,gBAFF,CADW;AAAA,CAAb;;AAOAH,IAAI,CAACI,eAAL,GAAuB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,UAAAA,EADa,GACND,OAAO,CAACE,KADF,CACbD,EADa;AAAA;AAAA,2CAEHR,KAAK,wCAAiCQ,EAAjC,EAFF;;AAAA;AAEfE,UAAAA,GAFe;AAAA;AAAA,2CAGFA,GAAG,CAACC,IAAJ,EAHE;;AAAA;AAGfP,UAAAA,IAHe;AAKrBQ,UAAAA,OAAO,CAACC,GAAR,yBAA6BT,IAAI,CAACC,IAAlC;AALqB,2CAOd;AAAED,YAAAA,IAAI,EAAJA;AAAF,WAPc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAUA,eAAeF,IAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import { useRouter } from 'next/router';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Layout from '../../components/Layout';\r\n\r\nconst Post = (props) => (\r\n  <Layout>\r\n    <h1>{props.show.name}</h1>\r\n    <p></p>\r\n  </Layout>\r\n);\r\n\r\nPost.getInitialProps = async (context) => {\r\n  const { id } = context.query;\r\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`)\r\n  const show = await res.json();\r\n\r\n  console.log(`Fetched show: ${show.name}`);\r\n\r\n  return { show };\r\n};\r\n\r\nexport default Post;\r\n// const Content = ({ router }) => (\r\n//   <div>\r\n//     <h1>{router.query.id}</h1>\r\n//     <p>This is the blog post content</p>\r\n//   </div>\r\n// );\r\n\r\n// export default () => {\r\n//   const router = useRouter();\r\n//   return (\r\n//     <Layout>\r\n//       <Content router={router} />\r\n//     </Layout>\r\n//   );\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}